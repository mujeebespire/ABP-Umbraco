@inherits UmbracoViewPage<BlockListItem>
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Extensions
@using ABP.Web.Models.UmbracoModels
@using Umbraco.Cms.Core.Models

@{
    var content = Model.Content as RightImageWithLeftText;
    if (content == null) return;

    var heading = content.Value<string>("heading");
    var title = content.Value<string>("title");
    var description = content.Value<string>("description");
    var image = content.Image;
    var imageUrl = image?.Url() ?? "";

    // Toggle
    var leftImage = content.Value<bool>("leftImage");

    // Multiple URL Picker
    var ctas = content.Value<IEnumerable<Link>>("cta");
}

@if (leftImage)
{
    <!-- When toggle = true : Download block design -->
    <section class="download-form">
        <div class="download-form__content">
            <div class="download-form__info">
                @if (!string.IsNullOrWhiteSpace(title))
                {
                    <h2 class="download-form__title">@title</h2>
                }

                @if (ctas != null && ctas.Any())
                {
                    <div class="download-form__cta-holder">
                        @foreach (var link in ctas)
                        {
                            if (link != null)
                            {
                                var btnClass = ctas.ToList().IndexOf(link) == 0
                                ? "download-form__btn download-form__btn--blue download-form__btn--download btn js-download-btn"
                                : "download-form__btn download-form__btn--white download-form__btn--download btn js-download-btn";

                                <a href="@link.Url" target="@(link.Target)" class="@btnClass">
                                    <span class="download-form__btn-text">@link.Name</span>
                                </a>
                            }
                        }
                    </div>
                }
            </div>

            @if (!string.IsNullOrWhiteSpace(imageUrl))
            {
                <div class="download-form__image-holder">
                    <img class="download-form__img" src="@imageUrl" alt="@title" />
                </div>
            }
        </div>

        <!-- Optional popup container if needed -->
        <div class="download-form__popup js-download-popup">
            <span class="download-form__popup-overlay"></span>
            <div id="response-container" class="download-form__popup-content"></div>
        </div>
    </section>
}
else
{
    <!-- When toggle = false : Contact block design -->
    <div class="contact">
        <div class="wrap">
            <div class="contact__container">
                @if (!string.IsNullOrWhiteSpace(imageUrl))
                {
                    <div class="contact__img has-cover" style="background-image: url('@imageUrl');">
                        <span class="sr-only">Contact image</span>
                    </div>
                }

                <div class="contact__content">
                    @if (!string.IsNullOrWhiteSpace(heading))
                    {
                        <h3 class="contact__subtitle">@heading</h3>
                    }
                    @if (!string.IsNullOrWhiteSpace(title))
                    {
                        <h2 class="contact__title">@title</h2>
                    }
                    @if (!string.IsNullOrWhiteSpace(description))
                    {
                        <p class="contact__text">@Html.Raw(description)</p>
                    }

                    @if (ctas != null && ctas.Any())
                    {
                        @foreach (var link in ctas)
                        {
                            if (link != null)
                            {
                                <a href="@link.Url" target="@(link.Target)" class="btn-home btn-home--cta">
                                    <span class="btn-home__text">@link.Name</span>
                                </a>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}
